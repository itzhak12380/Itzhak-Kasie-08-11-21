{"version":3,"sources":["img/DayLightThem.jpg","components/features/them.js","img/skyAtNight.jpg","redux/weather/weather.js","components/features/fetchData.js","components/features/cityCard.js","components/features/errorComponent.js","components/pages/Home.js","components/features/header.jsx","components/pages/favorites.jsx","components/pages/container.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["dark","backgroundColor","backgorundImg","color","headerColor","buttonColor","optionsBackground","light","DayBackground","citySlice","createSlice","name","initialState","data","Key","LocalizedName","temperature","weather","reducers","currntCity","state","payload","ThemColor","changeThem","watherForcastSlice","Forcast","favoriteSlice","add","push","cut","filter","element","index","actions","key","process","getWeather","id","a","query","fetch","responce","json","getCity","city","fetchData","handleError","updateGlobalState","undefined","alert","then","catch","error","cityApi","DailyForecasts","weatherApi","message","Temperature","Maximum","UnitType","Day","IconPhrase","CityCard","dispatch","useDispatch","City","useSelector","favorite","favorits","className","style","i","length","isFavo","type","onClick","ErrorComponent","width","height","src","Home","myForcast","forcast","useState","CityAraay","setCityAraay","Display","setDisplay","input","setinput","ErorrCatch","setErorr","cityName","e","target","value","item","backgroundImage","autoComplete","onChange","placeholder","variant","map","document","getElementById","tabIndex","day","forcastDays","Date","split","display","Minimum","Value","Unit","Icon","Header","iconStyle","Them","setThem","Box","AppBar","position","Toolbar","Stack","direction","spacing","alignItems","Switch","defaultChecked","inputProps","to","Favorites","setErrorHandling","favoritList","card","Card","sx","minWidth","CardContent","Typography","fontSize","gutterBottom","mb","CardActions","Button","size","deleteLocation","justifyContent","flexDirection","Container","HandleError","setHandleError","useEffect","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","res","AdministrativeArea","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","weatherForcast","them","store","configureStore","getState","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ac57eda.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DayLightThem.2658330f.jpg\";","import DayBackground from '../../img/DayLightThem.jpg'\r\nimport NightBackground from '../../img/skyAtNight.jpg'\r\n\r\nexport const dark = {\r\n    backgroundColor:\"#222831\",\r\n    backgorundImg: NightBackground,\r\n    color:\"white\",\r\n    headerColor:\"#393E46\",\r\n    buttonColor:\"#B55400\",\r\n    optionsBackground:\"#393E46\"\r\n}\r\nexport const light = {\r\n    backgroundColor:\"#E4FBFF\",\r\n    backgorundImg: DayBackground,\r\n    color:\"black\",\r\n    headerColor:\"#1597E5\",\r\n    buttonColor:\"#1597E5\",\r\n    optionsBackground:\"white\"\r\n}","export default __webpack_public_path__ + \"static/media/skyAtNight.b12142a5.jpg\";","import { createSlice } from '@reduxjs/toolkit'\r\nimport { light } from '../../components/features/them'\r\nexport const citySlice = createSlice({\r\n    name: \"city\",\r\n    initialState: { data: { Key: \"\", LocalizedName: \"\", temperature: \"\", weather: \"\" } },\r\n    reducers: {\r\n        currntCity: (state, { payload }) => {\r\n            state.data = payload\r\n        }\r\n    }\r\n})\r\nexport const ThemColor = createSlice({\r\n    name: \"city\",\r\n    initialState: { data: light},\r\n    reducers: {\r\n        changeThem: (state, { payload }) => {\r\n            state.data = payload\r\n        }\r\n    }\r\n})\r\nexport const watherForcastSlice = createSlice({\r\n    name: \"forcast\",\r\n    initialState: { data: [] },\r\n    reducers: {\r\n        Forcast: (state, { payload }) => {\r\n            state.data = payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const favoriteSlice = createSlice({\r\n    name: \"favorit-locations\",\r\n    initialState: { data: [] },\r\n    reducers: {\r\n        add: (state, { payload }) => {\r\n            state.data.push(payload)\r\n        },\r\n        cut: (state, { payload }) => {\r\n            state.data = state.data.filter((element, index) => {\r\n                return index !== payload\r\n            })\r\n        }\r\n    }\r\n})\r\nexport const { currntCity } = citySlice.actions;\r\nexport const { changeThem } = ThemColor.actions;\r\nexport const { Forcast } = watherForcastSlice.actions;\r\nexport const { add, cut } = favoriteSlice.actions;\r\n","import { Forcast, currntCity } from '../../redux/weather/weather'\r\nconst key = process.env.REACT_APP_APIKEY\r\nexport async function getWeather(id) {\r\n    const base = \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\n    const query = `${id}?apikey=${key}`\r\n    const responce = await fetch(base + query)\r\n    const data = await responce.json()\r\n    return data;\r\n}\r\nexport async function getCity(city) {\r\n    const base = \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\"\r\n    const query = `?apikey=${key}&q=${city}`\r\n    const responce = await fetch(base + query)\r\n    const data = await responce.json();\r\n    return data[0]\r\n}\r\n\r\nexport const fetchData = async (city, handleError, updateGlobalState) => {\r\n    if(city === undefined){\r\n        return alert(\"input is required please enter a city name\")\r\n    }\r\n    // fetch citys information\r\n    let cityApi = await getCity(city)\r\n        .then((responce) => {\r\n            return responce\r\n        })\r\n        .catch((error) => {\r\n            return error\r\n        })\r\n    if (cityApi === undefined) {\r\n        return handleError(true)\r\n    }\r\n    // fetch weather\r\n    let weatherApi = await getWeather(cityApi.Key)\r\n        .then((responce) => {\r\n            return responce.DailyForecasts\r\n        })\r\n        .catch((error) => {\r\n            return error\r\n        })\r\n\r\n    if (weatherApi.message) {\r\n        handleError(true)\r\n    }\r\n    else {\r\n        updateGlobalState(Forcast(weatherApi))\r\n        updateGlobalState(currntCity({\r\n            temperature: `${weatherApi[0].Temperature.Maximum.UnitType} F`,\r\n            weather: weatherApi[0].Day.IconPhrase,\r\n            LocalizedName: cityApi?.LocalizedName,\r\n            Key: cityApi?.Key\r\n        }))\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './cityCard.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { add, cut } from '../../redux/weather/weather'\r\nfunction CityCard() {\r\n    const dispatch = useDispatch()\r\n    const City = useSelector(state => state.currntCity.data)\r\n    const ThemColor = useSelector(state => state.ThemColor.data)\r\n    const favorite = useSelector(state => state.favorits.data)\r\n    function addToFavorite() {\r\n        dispatch(add(City))\r\n    }\r\n    const isFavo = () => {\r\n        for (let i = 0; i < favorite.length; i++) {\r\n            if (favorite[i].Key === City.Key) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    return (\r\n        <div className=\"card\" style={{ color: ThemColor.color }}>\r\n            <h3>city: {City.LocalizedName}</h3>\r\n            <h3>key: {City.Key}</h3>\r\n            {isFavo() ? <span style={{ color: ThemColor.color }} className=\"saveSpan\"> location saved</span> : <button style={{ backgroundColor: ThemColor.buttonColor }} type=\"button\" className=\"saveButton\" onClick={addToFavorite}> save locations </button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityCard\r\n","import React from 'react'\r\n\r\nfunction ErrorComponent() {\r\n    return (\r\n        <div>\r\n            <img style={{ width: \"300px\", height: '250px' }} src='http://cdn.shopify.com/s/files/1/1061/1924/products/Very_sad_emoji_icon_png_grande.png?v=1571606089' />\r\n            <h1> Error page not found</h1>\r\n            <h2>please refresh the page or try again later</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorComponent\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport './Home.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchData } from '../features/fetchData';\r\nimport CityCard from '../features/cityCard';\r\nimport ErrorComponent from '../features/errorComponent';\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const myForcast = useSelector(state => state.forcast)\r\n    const ThemColor = useSelector(state => state.ThemColor.data)\r\n    const [CityAraay, setCityAraay] = useState([])\r\n    const [Display, setDisplay] = useState(false)\r\n    let [input, setinput] = useState()\r\n    const [ErorrCatch, setErorr] = useState(false)\r\n    const cityName = async (e) => {\r\n        const base = \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\"\r\n        const query = `?apikey=${process.env.REACT_APP_APIKEY}&q=${e.target.value}`\r\n        const responce = await fetch(base + query)\r\n        const data = await responce.json();\r\n        setCityAraay(data)\r\n        setinput((item) => { return item = e.target.value })\r\n\r\n    }\r\n    if (ErorrCatch) {\r\n        return (\r\n            <ErrorComponent/>\r\n        )\r\n    }\r\n    return (\r\n        <div >\r\n            <div className=\"HomeContainer\" style={{ backgroundImage: `url(\"${ThemColor.backgorundImg}\")`, color: ThemColor.color }}>\r\n                <div className=\"searcContainer\">\r\n                    <div className=\"search\">\r\n                        <input className=\"searchInput\" autoComplete=\"off\" id=\"searchInput\" onClick={() => { setDisplay(true) }} onChange={cityName} placeholder=\"search city\" />\r\n                        <button className=\"searchButton\" style={{ backgroundColor: ThemColor.buttonColor }} variant=\"text\" onClick={() => { fetchData(input, setErorr, dispatch) }}>search</button>\r\n                    </div>\r\n                    <div className=\"athocomplete\">\r\n                        {Display && CityAraay.map((city, index) => {\r\n                            return (\r\n                                <div onClick={() => setDisplay(false)} key={index}>\r\n                                    <div style={{color:ThemColor.color,backgroundColor:ThemColor.optionsBackground}} onClick={() => document.getElementById(\"searchInput\").value = city.LocalizedName} className=\"option\" tabIndex=\"0\" key={index}>\r\n                                        <span className='city'  >{city.LocalizedName}</span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {Display && <button className=\"searchButton\" style={{ backgroundColor: ThemColor.buttonColor }} onClick={() => setDisplay(false)}>close</button>}\r\n\r\n                </div>\r\n                <div >\r\n\r\n                    <CityCard />\r\n                </div>\r\n                <div className=\"weatherForcast\">\r\n                    {myForcast.data.map((day, index) => {\r\n                        let forcastDays = day.Date.split(\"T\")[0];\r\n                        return (\r\n                            <div className=\"day\" key={index}>\r\n                                <h3>day : {forcastDays}</h3>\r\n                                <label > Temperature <br />\r\n                                    <span > Minimum : <p style={{ display: 'inline' }}>{day.Temperature.Minimum.Value} {day.Temperature.Minimum.Unit}</p> </span>\r\n                                    <br />\r\n                                    <span > Maximum : <p style={{ display: 'inline' }}>{day.Temperature.Maximum.Value} {day.Temperature.Maximum.Unit}</p> </span>\r\n                                </label>\r\n                                <br />\r\n                                {day.Day.Icon < 10 ? <p > <img src={`http://openweathermap.org/img/wn/0${day.Day.Icon}d@2x.png`} /> {day.Day.IconPhrase} </p> :\r\n                                    <img src={`http://openweathermap.org/img/wn/${day.Day.Icon}d@2x.png`} />\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from \"react\";\r\nimport './header.css'\r\nimport AccountBoxRoundedIcon from '@mui/icons-material/AccountBoxRounded';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport { Link } from \"react-router-dom\";\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\nimport { changeThem } from \"../../redux/weather/weather\";\r\nimport { light,dark } from \"./them\";\r\nimport { useDispatch ,useSelector} from \"react-redux\";\r\nconst Header = () => {\r\n    let iconStyle = {\r\n        height: \"35\", width: \"35\",\r\n    }\r\n    const dispatch = useDispatch()\r\n    const ThemColor = useSelector(state => state.ThemColor.data)\r\n    const [Them, setThem] = useState(true)\r\n    const isTrue = ()=>{\r\n        if(Them == true){\r\n            dispatch(changeThem(dark))\r\n            setThem(false)\r\n        }\r\n        else{\r\n            dispatch(changeThem(light))\r\n            setThem(true)\r\n        }\r\n    }\r\n    return (\r\n        <header>\r\n            <Box className=\"header\"  >\r\n                <AppBar position=\"static\" style={{ backgroundColor:ThemColor.headerColor }} >\r\n                    <Toolbar className=\"Toolbar\" >\r\n                        <p className=\"title\"  >\r\n                            Herolo/Abra\r\n                        </p>\r\n                        <div className=\"routs\" >\r\n                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                <span className=\"themButton\">dark</span>\r\n                                <Switch onClick={isTrue} defaultChecked inputProps={{ 'aria-label': 'ant design' }} />\r\n                                <span className=\"themButton\">light</span>\r\n                            </Stack>\r\n                            <Link to=\"/\" className=\"Link\" >\r\n                                <HomeRoundedIcon style={iconStyle} color=\"inherit\" />\r\n                            </Link>\r\n                            <Link to=\"/favorite\" className=\"Link\">\r\n                                <AccountBoxRoundedIcon style={iconStyle} className=\"icon\" />\r\n                            </Link>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React, { useState } from 'react'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cut } from '../../redux/weather/weather';\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchData } from '../features/fetchData'\r\n\r\n\r\nfunction Favorites() {\r\n    const [ErrorHandling, setErrorHandling] = useState()\r\n    const favoritList = useSelector(state => state.favorits.data)\r\n    const ThemColor = useSelector(state => state.ThemColor.data)\r\n    const dispatch = useDispatch()\r\n    function deleteLocation(index) {\r\n        return dispatch(cut(index))\r\n    }\r\n\r\n    function ShowForcast(city) {\r\n        fetchData(city, setErrorHandling, dispatch)\r\n    }\r\n    const style = {\r\n        \"width\": \"85vw\",\r\n        \"height\": \"70vh\",\r\n        \"display\": \"flex\",\r\n        \"flexWrap\": \"wrap\",\r\n        \"color\": ThemColor.color,\r\n        \"justifyContent\": \"space-evenly\",\r\n    }\r\n    return (\r\n        <div >\r\n            <h3>faviorit locations lists</h3>\r\n            <div style={style}>\r\n                {favoritList.map((card, index) => {\r\n                    return (\r\n                        <Card sx={{ minWidth: 275, height: \"fit-content\" }} key={index}>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    {card.Key}\r\n                                </Typography>\r\n\r\n                                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                                    {card.LocalizedName}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    {card.weather}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    {card.temperature}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Link to=\"/\">\r\n                                    <Button type=\"buttun\" size=\"small\" onClick={() => ShowForcast(card.LocalizedName)}>show forcast</Button>\r\n                                </Link>\r\n\r\n                                <Button type=\"buttun\" size=\"small\" onClick={() => deleteLocation(index)}>delete</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Home from './Home'\r\nimport Header from '../features/header'\r\nimport Favorites from './favorites'\r\nimport {\r\n    HashRouter as Router,\r\n    Routes,\r\n    Route,\r\n} from 'react-router-dom'\r\nimport { fetchData } from '../features/fetchData'\r\nimport ErrorComponent from '../features/errorComponent'\r\nconst style = {\r\n    height: '96vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100vw',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n}\r\nfunction Container() {\r\n    const dispatch = useDispatch()\r\n    const [HandleError, setHandleError] = useState()\r\n    useEffect(() => {\r\n        const geoLocatin = (position) => {\r\n            fetch(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${process.env.REACT_APP_APIKEY}&q=${position.coords.latitude},${position.coords.longitude}`).then((res) => { return res.json() }).then((responce) => { return fetchData(responce.AdministrativeArea.LocalizedName || \"tel aviv\", setHandleError, dispatch) })\r\n        }\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(geoLocatin);\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }, [])\r\n    if (HandleError) {\r\n        return (\r\n            <ErrorComponent/>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div style={style}>\r\n                <div style={{ height: \"10%\" }}>\r\n                    <Header />\r\n                </div >\r\n\r\n                <div style={{ height: \"90%\" }}>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Home />} />\r\n                        <Route path=\"/favorite\" element={<Favorites />} />\r\n                    </Routes>\r\n                </div>\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import './App.css';\nimport Container from './components/pages/container';\nimport { useSelector } from 'react-redux';\nfunction App() {\n  const ThemColor = useSelector(state => state.ThemColor.data)\n  return (\n    <div className=\"App\" style={{backgroundColor:ThemColor.backgroundColor}}>\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { citySlice, watherForcastSlice, favoriteSlice ,ThemColor} from './weather/weather'\r\nconst city = citySlice.reducer\r\nconst weatherForcast = watherForcastSlice.reducer\r\nconst favorite = favoriteSlice.reducer\r\nconst them = ThemColor.reducer\r\nexport const store = configureStore({\r\n    reducer: {\r\n        currntCity: city,\r\n        ThemColor:them,\r\n        favorits: favorite,\r\n        forcast: weatherForcast\r\n    }\r\n})\r\n\r\nexport const AppDispatch = store.dispatch\r\nexport const RootState = store.getState","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}